[tool.poetry]
name = "Tooldelta"
version = "0.0.0"                                              # This field is automatically set to the value in the version file
description = "Plugin Loader for NeteaseRentalServer on Panel"
authors = ["ToolDelta Studio Staff"]
license = ""

readme = "README.md"
homepage = "https://github.com/ToolDelta-Basic/ToolDelta"
repository = "https://github.com/ToolDelta-Basic/ToolDelta"

# Please don't change this manually, your changes may invalidate other people's package management, use poetry to make changes!
[tool.poetry.dependencies]
python = ">=3.10,<3.13"
psutil = "5.9.8"
colorama = "^0.4.6"
pillow = "^10.2.0"
shellescape = "^3.8.1"
pyspeedtest = "1.2.7"
aiohttp = "^3.9.3"
python-socketio = "5.11.1"
flask = "^3.0.2"
websocket-client = "^1.7.0"
pyyaml = "6.0.1"
brotli = "^1.1.0"
websockets = "^12.0"
tqdm = "^4.66.4"
anyio = "^4.4.0"
requests = "^2.32.3"
sqlite-easy-ctrl = "0.1.2"
numpy = "^2.1.0"
protobuf = "^6.30.1"
grpcio = "^1.71.0"

[[tool.poetry.source]]
name = "mirrors"
url = "http://mirrors.aliyun.com/pypi/simple/"
priority = "primary"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
line-length = 100
target-version = "py313"

[tool.ruff.lint]
select = [
    "ALL"
]
ignore = [
    "D100",    # Missing docst
    "D101",    # Missing class
    "D102",    # Missing docst
    "D103",    # Missing docst
    "D104",    # Missing docst
    "D105",    # Missing docst
    "D107",    # Missing docst
    "D212",    # Multi-line do
    "D400",    # First line sh
    "D415",    # First line sh
    "E701",    # Multiple stat
    "F401",    # `module` impo
    "I001",    # Import block 
    "N802",    # Function name
    "N803",    # Argument name
    "N806",    # Variable `var
    "N818",    # Exception nam
    "N999",    # Invalid modul
    "Q000",    # Single quotes
    "S101",    # Use of `asser
    "S311",    # Standard pseu
    "T201",    # `print` found
    "EM101",   # Exception mus
    "EM102",   # Exception mus
    "TC001",   # Move applicat
    "TC002",   # Move third-pa
    "TC003",   # Move standard
    "TD003",   # Missing issue
    "UP007",   # Use `X | Y` f
    "UP031",   # Use format sp
    "UP035",   # Import from `
    "UP037",   # Remove quotes
    "ANN401",  # Dynamically t
    "ARG001",  # Unused functi
    "ARG002",  # Unused method
    "ARG005",  # Unused lambda
    "COM812",  # Trailing comm
    "ERA001",  # Found comment
    "FBT001",  # Boolean-typed
    "FBT002",  # Boolean defau
    "ISC002",  # Implicitly co
    "PTH113",  # `os.path.isfi
    "PTH123",  # `open()` shou
    "PLR0913", # Too many argu
    "PLR1704", # Redefining ar
    "PLW0211", # First argumen
    "RUF001",  # Checks for am
    "RUF002",  # Checks for am
    "RUF003",  # Checks for am
    "SLF001",  # Private membe
    "SIM108",  # Use ternary o
    "TRY003",  # Avoid specify
    "TRY300",  # Checks for re
]

[tool.pyright]
typeCheckingMode = "basic"
